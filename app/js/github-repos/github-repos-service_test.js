// Generated by CoffeeScript 1.9.0
(function() {
  'use strict';
  describe('GitHubReposService', function() {
    var $httpBackend, GitHubRepos;
    $httpBackend = GitHubRepos = null;
    beforeEach(module('github-repos.github-repos-service'));
    beforeEach(inject(function($injector) {
      $httpBackend = $injector.get('$httpBackend');
      return GitHubRepos = $injector.get('GitHubRepos');
    }));
    afterEach(function() {
      $httpBackend.verifyNoOutstandingExpectation();
      return $httpBackend.verifyNoOutstandingRequest();
    });
    it('should be resolved with list of repos of user', function() {
      $httpBackend.expect('GET', 'https://api.github.com/users/MichalZalecki/repos').respond([
        {
          id: 28694221,
          name: 'Repo 1'
        }, {
          id: 28694222,
          name: 'Repo 2'
        }, {
          id: 28694283,
          name: 'Repo 3'
        }
      ]);
      GitHubRepos.ofUser("MichalZalecki").then(function(repos) {
        return expect(repos).toEqual(['Repo 1', 'Repo 2', 'Repo 3']);
      });
      return $httpBackend.flush();
    });
    return it('should be rejected with "Not Found"', function() {
      $httpBackend.expect('GET', 'https://api.github.com/users/MichalZalecki/repos').respond(404, void 0, void 0, "Not Found");
      GitHubRepos.ofUser("MichalZalecki").then(void 0, function(err) {
        return expect(err).toEqual("Not Found");
      });
      return $httpBackend.flush();
    });
  });

}).call(this);
