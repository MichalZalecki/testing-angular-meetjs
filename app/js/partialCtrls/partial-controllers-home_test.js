// Generated by CoffeeScript 1.9.0
(function() {
  'use strict';
  describe('HomeCtrl', function() {
    var HomeCtrl, scope;
    HomeCtrl = scope = null;
    beforeEach(module('partial-controllers.home'));
    beforeEach(inject(function($rootScope, $controller) {
      scope = $rootScope.$new();
      scope.addMsg = function() {};
      scope.alertform = {
        $setPristine: function() {}
      };
      HomeCtrl = $controller('HomeCtrl', {
        '$scope': scope
      });
      scope.$digest();
      spyOn(scope, 'addMsg');
      return spyOn(scope.alertform, '$setPristine');
    }));
    it('should set initial value', function() {
      return expect(scope.alert).toEqual({});
    });
    it('should have addAlert method', function() {
      return expect(scope.addAlert).toEqual(jasmine.any(Function));
    });
    it('should call addMsg with style and alert.msg through addAlert', function() {
      scope.alert.msg = 'Bar';
      scope.addAlert('success');
      return expect(scope.addMsg).toHaveBeenCalledWith('success', 'Bar');
    });
    return it('should call alertform.$setPrisitne and reset alert through addAlert', function() {
      scope.alert.msg = 'FooBar';
      expect(scope.alert).toEqual({
        msg: 'FooBar'
      });
      scope.addAlert('success');
      expect(scope.alert).toEqual({});
      return expect(scope.alertform.$setPristine).toHaveBeenCalled();
    });
  });

}).call(this);
